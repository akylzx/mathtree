'use client'

import { Navbar } from "@/components/navbar"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import Link from "next/link"
import { useState } from "react"

export default function RegisterPage() {
  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")
  const [confirmPassword, setConfirmPassword] = useState("")
  const [error, setError] = useState<string | null>(null)
  const [success, setSuccess] = useState<string | null>(null)

  const handleRegister = (e: React.FormEvent) => {
    e.preventDefault()
    setError(null)
    setSuccess(null)

    if (!email || !password || !confirmPassword) {
      setError("–ë–∞—Ä–ª—ã“õ ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑.")
      return
    }
    if (password !== confirmPassword) {
      setError("“ö“±–ø–∏—è—Å”©–∑–¥–µ—Ä —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ.")
      return
    }
    if (password.length < 6) {
      setError("“ö“±–ø–∏—è—Å”©–∑ –∫–µ–º –¥–µ–≥–µ–Ω–¥–µ 6 —Ç–∞“£–±–∞–¥–∞–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫.")
      return
    }

    // Mock registration logic
    console.log("–¢—ñ—Ä–∫–µ—É ”ô—Ä–µ–∫–µ—Ç—ñ:", { email, password })
    setSuccess("–°—ñ–∑ —Å”ô—Ç—Ç—ñ —Ç—ñ—Ä–∫–µ–ª–¥—ñ“£—ñ–∑! –ï–Ω–¥—ñ –∫—ñ—Ä—É–≥–µ –±–æ–ª–∞–¥—ã.")
    setEmail("")
    setPassword("")
    setConfirmPassword("")
    // In a real application, you would send this data to a backend API
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-100 to-pink-100 flex flex-col">
      <Navbar />
      <main className="flex-grow flex items-center justify-center p-4">
        <Card className="w-full max-w-md bg-white rounded-lg shadow-xl p-6">
          <CardHeader className="text-center mb-6">
            <CardTitle className="text-3xl font-bold text-primary">–¢—ñ—Ä–∫–µ–ª—É üìù</CardTitle>
            <p className="text-lg text-muted-foreground">–ñ–∞“£–∞ –µ—Å–µ–ø—Ç—ñ–∫ –∂–∞–∑–±–∞ –∂–∞—Å–∞“£—ã–∑</p>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleRegister} className="space-y-4">
              <div>
                <label htmlFor="email" className="block text-sm font-medium text-gray-700 mb-1">
                  –≠–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞
                </label>
                <Input
                  id="email"
                  type="email"
                  placeholder="–°—ñ–∑–¥—ñ“£ —ç–ª–µ–∫—Ç—Ä–æ–Ω–¥—ã“õ –ø–æ—à—Ç–∞“£—ã–∑"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  required
                  className="h-12 text-base"
                />
              </div>
              <div>
                <label htmlFor="password" className="block text-sm font-medium text-gray-700 mb-1">
                  “ö“±–ø–∏—è—Å”©–∑
                </label>
                <Input
                  id="password"
                  type="password"
                  placeholder="“ö“±–ø–∏—è—Å”©–∑—ñ“£—ñ–∑"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  required
                  className="h-12 text-base"
                />
              </div>
              <div>
                <label htmlFor="confirmPassword" className="block text-sm font-medium text-gray-700 mb-1">
                  “ö“±–ø–∏—è—Å”©–∑–¥—ñ —Ä–∞—Å—Ç–∞“£—ã–∑
                </label>
                <Input
                  id="confirmPassword"
                  type="password"
                  placeholder="“ö“±–ø–∏—è—Å”©–∑–¥—ñ “õ–∞–π—Ç–∞–ª–∞“£—ã–∑"
                  value={confirmPassword}
                  onChange={(e) => setConfirmPassword(e.target.value)}
                  required
                  className="h-12 text-base"
                />
              </div>
              {error && <p className="text-red-500 text-sm">{error}</p>}
              {success && <p className="text-green-500 text-sm">{success}</p>}
              <Button type="submit" className="w-full h-12 text-lg">
                –¢—ñ—Ä–∫–µ–ª—É
              </Button>
            </form>
            <p className="text-center text-sm text-gray-600 mt-4">
              –ï—Å–µ–ø—Ç—ñ–∫ –∂–∞–∑–±–∞“£—ã–∑ –±–∞—Ä –º–∞?{' '}
              <Link href="/login" className="text-primary hover:underline">
                –ö—ñ—Ä—É
              </Link>
            </p>
          </CardContent>
        </Card>
      </main>
    </div>
  )
}
